/* 
flexbox 
1. first condition
 -> display : flex === inline-block
 -> need to be directive parent

 .wrapper is flexbox container
when the flex-directino:row(x,y)
 flex-direction : row -> default direction 가로로 배치 horizontal
 -> flex-direction :row인 default상황에서 horizional axis -> main axis
    -> to move on the main axis -> justify-content  
-> flex-drection:row에서  vertical axis ->cross axis
    -> to move on the cross axis -> align-items

반대의 상황에서는 axis가 반대가 되는듯.

flex에서 상자들을 중앙으로 놓기 위해서는 warpper(직속부모)의 크기를 알아야 한다.
속성으로 확인해보면 직속부모의 크기와 상자의 크기가 같고 중앙에 벌써 위치해있다는것을 알 수 있다.
그러기 위해서는 flex contaniner의 크기를 정해주자.

THE REASON WHY WE CONFUSE BETWEEN
justify-content vs align-items
-> we don't sure which is main axis and cross axis!!
-> make sure to know this with flex-direction.
*/
.wrapper {
    display: flex; 
    flex-direction: column;
    /*Main axis*/
    justify-content: space-around;
    /*Cross axis*/
    align-items: stretch;
    height: 200vh; /*height를 정해주는게 중요함!*/
}
.box { 
    /* width: 200px; */
    height: 200px;
    background: peru;
    color: white;
}

/* .box {
    background: blue;
    width: 300px;
    height: 300px;
    display: inline-block;
    color: white;
}

.box:nth-child(2) {
    margin-left: 35px;
}
.box:nth-child(3) {
    margin-left: 20px;
} */